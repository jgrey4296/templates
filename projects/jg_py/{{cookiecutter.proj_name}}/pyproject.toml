## pyproject.toml -*- mode: conf-toml  -*-
[project]
name            = "{{cookiecutter.proj_name}}"
version         = "0.0.1"
description     = ""
readme          = "README.md"
requires-python = ">={{cookiecutter.python}}"
license         = {file = "LICENSE"}
keywords        = []
authors         = [
  {name  = "{{cookiecutter._author}}", email = "{{cookiecutter._email}}"},
]
classifiers     = [
  "Programming Language :: Python"
]


##-- dependencies
dependencies   = []

[project.optional-dependencies]
test = [
  "pytest < 5.0.0",
]

##-- end dependencies

##-- urls
[project.urls]
homepage      = "https://github.com/{{cookiecutter._github_username}}/{{cookiecutter.proj_name}}"
documentation = "https://readthedocs.org/{{cookiecutter.proj_name}}"
repository    = "https://github.com/{{cookiecutter._github_username}}/{{cookiecutter.proj_name}}"
changelog     = "https://github.com//{{cookiecutter.proj_name}}/blob/master/CHANGELOG.md"

##-- end urls

##-- scripts
[project.scripts]
# {{cookiecutter.proj_name}} = "{{cookiecutter.proj_name}}.{{cookiecutter.entry_point}}:main"

[project.gui-scripts]
# spam-gui      = "spam:main_gui"

[project.entry-points."nothing"]
# tomatoes      = "spam:main_tomatoes"

##-- end scripts

##-- build-system
[build-system]
# frontend: https://pypa-build.readthedocs.io/en/latest/index.html
# frontend: https://pdm.fming.dev/latest/
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1"
         # https://flit.pypa.io/en/stable/index.html
         # "flit_core > 3.2, <4",
         # https://pdm-backend.fming.dev/
         # "pdm-backend"

]

build-backend = "setuptools.build_meta"
# build-backend = "flit_core.buildapi"
# build-backend = "pdm.backend"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where      = ["."]
include    = ["{{cookiecutter.proj_name}}*"]

[tool.setuptools.package-data]
"*" = ["*"]
"{{cookiecutter.proj_name}}.__data"    = ["*.so"]

[tool.setuptools.exclude-package-data]

##-- end build-system

# Tools #######################################################################

##-- pytest
# https://docs.pytest.org/en/8.2.x/reference/reference.html#ini-options-ref
[tool.pytest.ini_options]
log_cli       = false
log_level     = "DEBUG"
log_cli_level = "DEBUG"
cache_dir     = ".temp/pytest_cache"
log_file      = ".temp/logs/pytest.log"

##-- end pytest

##-- sphinx
[tool.sphinx]
author     = "{{cookiecutter._author}}"
copyright  = "{% now 'utc' %}"
extensions = ['sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.napoleon']
templates  = ['_templates']
exclude    = ['**/flycheck_*.py']

[tool.sphinx.autosummary]
generate = true

[tool.sphinx.autodoc]
add_module_names   = false
inherit_docstrings = true

[tool.sphinx.autodoc.defaults]
members           = true
undoc-members     = true
private-members   = false
special-members   = false
inherited-members = true
show-inheritance  = true

[tool.sphinx.html]
theme       = 'alabaster'
static      = ['_static']

[tool.sphinx.html.options]

##-- end sphinx

##-- bumpver
[tool.bumpver]
current_version    = "0.0.1"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
commit             = true
# tag                = true
# push             = true
# pre_commit_hook  = ""
# post_commit_hook = ""

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"{{cookiecutter.proj_name}}/__init__.py" = ['^__version__\s+=\s+"{version}"']

##-- end bumpver

##-- isort
# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
color_output           = false
py_version             = 311
# profile                = "black"
comment_prefix         = "#"
sections               = [
"FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"
]
default_section        = "THIRDPARTY"
lines_after_imports    = -1
lines_between_sections = 1
lines_between_types    = 0

import_heading_future      = "Imports:"
import_heading_stdlib      = "##-- stdlib imports"
import_heading_thirdparty  = "##-- 3rd party imports"
import_heading_firstparty  = "##-- 1st party imports"
import_heading_localfolder = ""

import_footer_future      = ""
import_footer_stdlib      = "##-- end stdlib imports"
import_footer_thirdparty  = "##-- end 3rd party imports"
import_footer_firstparty  = "##-- end 1st party imports"
import_footer_localfolder = ""

add_imports            = [
"from __future__ import annotations",
"import datetime",
"import enum",
"import functools as ftz",
"import itertools as itz",
"import logging as logmod",
"import pathlib as pl",
"from uuid import UUID, uuid1",
"from typing import (TYPE_CHECKING, Any, Callable, ClassVar, Final, Generic, Iterable, Iterator, Mapping, Match, MutableMapping, Protocol, Sequence, Tuple, TypeAlias, TypeGuard, TypeVar, cast, final, overload, runtime_checkable, Generator)",
]


##-- end isort
