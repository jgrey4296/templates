JG Conventions:
Protocols  {}_p.   # Functional Spec.
Data       {}_d.   # Structural Spec.
Interfaces {}_i.   # Functional+Structural Spec.

Structs    {}_s.   # Structs.
Specs      {}_c.   # Declarative Specifications of runtime behaviour.

Enums      {}_e.   #
Flags      {}_f.   #
Mixins     {}_m.   # Separate Implementations.

Hooks      {}_h.   #

Loggers    {}_l.   #

Kw Conflicts  _{}. # eg: _class in python

build()            # Creates the type its attached to.            House.build => House
make()             # Makes whatever the type is responsible for.  Oven.make   => Bread

util               # not utils

decoding           # lower -> higher
encoding           # higher -> lower

module  # Unit of code
package # sub-unit of code
crate   # compiled unit of code
----               # Directories
.{}                # Hidden, Ignorable
{}_                # Source for Generation
gen_{}                # Generation Output
__tests            # Test dirs

----
parameter # Formal Spec
argument  # Actual Value
