[project]
name            = "{{cookiecutter.proj_name}}"
version         = "0.1.0"
description     = ""
readme          = "README.md"
requires-python = ">={{cookiecutter.python}}"
license         = {file = "LICENSE"}
keywords        = ["rust"]
authors         = [
  {name  = "{{cookiecutter._author}}", email = "{{cookiecutter._email}}"},
]
classifiers     = [
  "Programming Language :: Python"
]

##-- dependencies
dependencies   = []

[project.optional-dependencies]
docs = [ "sphinx" ]
dev  = [ "https://github.com/jgrey4296/doot", "pipreqs" ]
test = [ "pytest < 5.0.0" ]

##-- end dependencies

##-- urls
[project.urls]
homepage      = "https://github.com/{{cookiecutter._github_username}}/{{cookiecutter.proj_name}}"
documentation = "https://readthedocs.org/{{cookiecutter.proj_name}}"
repository    = "https://github.com/{{cookiecutter._github_username}}/{{cookiecutter.proj_name}}"
changelog     = "https://github.com//{{cookiecutter.proj_name}}/blob/master/CHANGELOG.md"

##-- end urls

##-- scripts
[project.scripts]
"{{cookiecutter.proj_name}}" = "{{cookiecutter.proj_name}}.{{cookiecutter.entry_point}}:main"

[project.gui-scripts]
# spam-gui      = "spam:main_gui"

[project.entry-points."nothing"]
# tomatoes      = "spam:main_tomatoes"

##-- end scripts

##-- build system
[build-system]
requires = [
         "setuptools",
         "wheel"
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
"{{cookiecutter.proj_name}}.__configs" = []
"{{cookiecutter.proj_name}}.__data"    = ["*.so"]

[tool.setuptools.exclude-package-data]

##-- end build system

##-- pyright
[tool.pyright]
# strict = {{cookiecutter.proj_name}}.*
verboseOutput               = true
typeCheckingMode            = "strict"
pythonVersion               = "{{cookiecutter.python}}"

reportUnusedImport          = false
reportAssertAlwaysTrue      = "information"
reportMissingParameterType  = "warning"
reportMissingTypeArgument   = "warning"
reportMissingTypeStubs      = "warning"
reportUnknownMemberType     = "warning"
reportUnknownParameterType  = "information"
reportUnknownVariableType   = "warning"
reportUnnecessaryCast       = "information"
reportUnnecessaryIsInstance = "warning"

##-- end pyright

##-- mypy
# https://mypy.readthedocs.io/en/stable/config_file.html#config-file
[mypy]
python_version      = "{{cookiecutter.python}}"
warn_return_any     = true
warn_unused_configs = true
cache_dir           = ".temp/mypy_cache"

# Per-module options:
[mypy-pyparsing]
ignore_missing_imports = true

##-- end mypy

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "DEBUG"
log_cli_level = "DEBUG"

##-- end pytest

##-- sphinx
[tool.sphinx]
author     = "{{cookiecutter._author}}"
copyright  = "{% now 'utc' %}"
extensions = ['sphinx.ext.doctest', 'sphinx.ext.autodoc', 'sphinx.ext.autosummary', 'sphinx.ext.napoleon']
templates  = ['_templates']
exclude    = ['**/flycheck_*.py']

[tool.sphinx.autosummary]
generate = true

[tool.sphinx.autodoc]
add_module_names   = false
inherit_docstrings = true

[tool.sphinx.autodoc.defaults]
members           = true
undoc-members     = true
private-members   = false
special-members   = false
inherited-members = true
show-inheritance  = true

[tool.sphinx.html]
theme       = 'alabaster'
static      = ['_static']

[tool.sphinx.html.options]

##-- end sphinx

##-- bumpver
[tool.bumpver]
current_version    = "0.1.0"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
# commit             = true
# tag                = true
# pre_commit_hook  = ""
# post_commit_hook = ""
# push             = true

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"{{cookiecutter.proj_name}}/__init__.py" = ['^__version__\s+:=\s+"{version}"']

##-- end bumpver

##-- isort
# https://pycqa.github.io/isort/docs/configuration/config_files.html
[tool.isort]
color_output           = false
py_version             = 311
profile                = "black"
comment_prefix         = "# "
sections               = [
"FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"
]
default_section        = "THIRDPARTY"
lines_after_imports    = -1
lines_between_sections = 1
lines_between_types    = 0

add_imports            = [
"from __future__ import annotations",
"import abc",
"import datetime",
"import enum",
"import functools as ftz",
"import itertools as itz",
"import logging as logmod",
"import pathlib as pl",
"import re",
"import types",
"import contextlib",
"import hashlib",
"from collections import defaultdict, ChainMap",
"from time import sleep",
"from copy import deepcopy",
"from dataclasses import InitVar, dataclass, field",
"from uuid import UUID, uuid1",
"from weakref import ref",
"from typing import (TYPE_CHECKING, Annotated, Any, Callable, ClassVar, Final, Generic, Iterable, Iterator, Mapping, Match, MutableMapping, Protocol, Sequence, Tuple, TypeAlias, TypeGuard, TypeVar, cast, final, Self, overload, runtime_checkable, Generator)",
"import atexit # for @atexit.register",
"import faulthandler",
]

import_heading_future      = "Imports:"
import_heading_stdlib      = "##-- stdlib imports"
import_heading_thirdparty  = "##-- 3rd party imports"
import_heading_firstparty  = "##-- 1st party imports"
import_heading_localfolder = ""

import_footer_future      = ""
import_footer_stdlib      = "##-- end stdlib imports"
import_footer_thirdparty  = "##-- end 3rd party imports"
import_footer_firstparty  = "##-- end 1st party imports"
import_footer_localfolder = ""

[tool.isort.import_headings]
# Currently Doesn't work
FUTURE      = "## Imports:"
STDLIB      = "##-- stdlib imports"
THIRDPARTY  = "##-- 3rd party imports"
FIRSTPARTY  = "##-- 1st party imports"
LOCALFOLDER = ""

[tool.isort.import_footers]
# Currently Doesn't work
FUTURE      = ""
STDLIB      = "##-- end stdlib imports"
THIRDPARTY  = "##-- end 3rd party imports"
FIRSTPARTY  = "##-- end 1st party imports"
LOCALFOLDER = "## End of Imports "

##-- end isort
