JG Conventions:
Protocols   {}_p.   # Functional Spec.
Data        {}_d.   # Structural Spec.
Interfaces  {}_i.   # Functional+Structural Spec.

Structs     {}_s.   # Structs.
Specs       {}_c.   # Declarative Specifications of runtime behaviour.

Enums       {}_e.   #
Flags       {}_f.   #
Mixins      {}_m.   # Separate Implementations.

CtxManagers {}_ctx. # Eg: python 'with x' statements
Hooks       {}_h.   #
Callbacks   {}_c.   #
Loggers     {}_l.   #

Kw Conflicts  _{}. # eg: _class in python

build()            # Creates the type its attached to.            House.build => House
make()             # Makes whatever the type is responsible for.  Oven.make   => Bread

util               # not utils

decoding           # lower -> higher
encoding           # higher -> lower

package # Top Unit of Code
module  # A Sub-Unit of code
crate   # Compiled unit of code
----               # Directories
.{}                # Hidden, Ignorable
{}_                # Source for Generation
gen_{}             # Generation Output
__tests            # Test dirs

----
parameter # Formal Spec
argument  # Actual Value

---- UUIDS
v1 # uuid : timestamped, monotonic counter, MAC Address
v2 # uuid : security IDs
v3 # uuid : from MD5 hash of data
v4 # uuid : generated from random data
v5 # uuid : from SHA1 hashes
v6 # uuid : timestamped, monotonic counter, MAC address, will sort by creation time.
v7 # uuid : timestamped and random
v8 # uuid : entirely custom

---- CLI Args (GNU)
-opt                 # cli arg : option
-optoptopt           # cli arg : multiple args if they dont take parameters
-a                   # cli arg : short args
-optfoo              # cli arg : arg with param
-opt foo             # cli arg : arg with param
--longopt            # long options
--longopt=foo        # long opt with param
[options] [required] # cli arg
--                   # cli arg : terminate all options
-                    # stdin/out
