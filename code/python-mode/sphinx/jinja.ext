# -*- mode: snippet -*-
# name  : jinja.ext
# uuid  : jinja.ext
# key   : jinja.ext
# group : sphinx jinja
# --
def setup(app):
    """ Called on sphinx startup to connect extra settings """
    app.events.connect("builder-inited", add_jinja_ext, 1)
    app.add_directive("jgdir", JGDirective)
    # app.add_transform

def add_jinja_ext(app):
    app.builder.templates.environment.add_extension("jinja2.ext.debug")

def filter_contains(val:list|str, *needles:str) -> bool:
    """ A custom filter for jinja """
    match val:
        case str():
            return any(x in val for x in needles)
        case list():
            joined = " ".join(val)
            return any(x in joined for x in needles)
        case _:
            return False

def autoapi_prepare_jinja_env(jinja_env: jinja2.Environment) -> None:
    """ The autoapi hook for modifying jinja  """
    jinja_env.add_extension("jinja2.ext.debug")
    jinja_env.tests["contains"] = filter_contains