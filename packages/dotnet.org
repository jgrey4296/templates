#+TITLE: DotNet Package Reference
#+STARTUP: packages

* dotnet
https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-environment-variables
https://learn.microsoft.com/en-us/dotnet/api/?view=net-8.0
https://ubuntuhandbook.org/index.php/2023/11/install-dotnet-8-ubuntu-22-04/

https://learn.microsoft.com/en-gb/dotnet/core/extensions/logging-providers
https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events
https://learn.microsoft.com/en-gb/aspnet/core/fundamentals/middleware/write?view=aspnetcore-8.0
https://learn.microsoft.com/en-us/ef/core/
https://www.linode.com/docs/guides/install-dotnet-on-ubuntu/

* MSBuild
https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-reserved-and-well-known-properties?view=vs-2022

#+begin_src bash :results output
# verbose log to a file
dotnet build /flp:v=diag
#+end_src



* SDK
https://learn.microsoft.com/en-us/dotnet/core/project-sdk/overview
* linq
https://learn.microsoft.com/en-gb/dotnet/csharp/language-reference/keywords/query-keywords
https://learn.microsoft.com/en-gb/dotnet/csharp/linq/standard-query-operators/
https://learn.microsoft.com/en-gb/dotnet/csharp/linq/get-started/type-relationships-in-linq-query-operations
* dotnet framework
https://learn.microsoft.com/en-us/dotnet/api/?view=netframework-4.8&preserve-view=true

* entity framework
https://learn.microsoft.com/en-us/ef/core/

#+NAME: references
#+begin_src xml :results output
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.5">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.5">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="8.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.sqlite" Version="8.0.5" />
#+end_src


** Scaffolding
#+NAME: the model
#+begin_src csharp :results output
namespace web.Model;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore.Design;

using Microsoft.EntityFrameworkCore;

public class Patient
{
    [Key]
    public int Id { get; set; }
    public int[]? studies { get; set; }
    public int[]? images { get; set; }
}
#+end_src

#+NAME: context
#+begin_src csharp :results output

public class DicomContext : DbContext {

    private readonly string ConnectionString = "Data Source=test.db";
	protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
	{
		optionsBuilder.UseSqlite(ConnectionString);
	}

	public DbSet<Patient> Movies { get; set; }
}

#+end_src

#+NAME: creating the scaffold
#+begin_src bash :results output
dotnet ef dbcontext scaffold "Data Source=test.db" Microsoft.EntityFrameworkCore.Sqlite --msbuildprojectextensionspath ./.temp/obj/web --project src/web  -s src/web --context-dir _scaffold
#+end_src


** The migration
#+begin_src bash :results output
# Creates the db 'dbv0', for the target/start project 'src/web'
# Note the msbuildprojectextensionspath, to insert into the correct obj dir
## src/{web} -> .temp/obj/{web}
dotnet ef migrations add dbv0 -p src/web -s src/web --msbuildprojectextensionspath ./.temp/obj/web -o _migrations/initial

# Then apply it
dotnet ef databsae update -p src/web
# Creates test.db (from the connection string)
#+end_src



* asp dotnet
https://learn.microsoft.com/en-us/dotnet/api/?view=view=aspnetcore-8.0&preserve-view=true
* Nuget Packages
https://www.nuget.org/
** dnlib
https://www.nuget.org/packages/dnlib
https://github.com/0xd4d/dnlib
** ilspycmd
https://www.nuget.org/packages/ilspycmd/9.0.0.7618-preview1
** Xunit
https://xunit.net/
https://learn.microsoft.com/en-us/dotnet/core/tutorials/testing-with-cli
https://medium.com/bina-nusantara-it-division/a-comprehensive-guide-to-implementing-xunit-tests-in-c-net-b2eea43b48b
https://haacked.com/archive/2012/01/02/structuring-unit-tests.aspx/
*** Test access to internal/protected
#+begin_src csharp :results output
// Add to AssemblyInfo.cs for the module being tested
// https://stackoverflow.com/questions/358196
using System.Runtime.CompilerServices;
[assembly:InternalsVisibleTo("{TEST_SUBPROJECT_NAME}")]

#+end_src
** xunit godot
https://github.com/fledware/GodotXUnit
** docfx
https://dotnet.github.io/docfx/docs/basic-concepts.html
* Links
https://stackoverflow.com/questions/67910658/how-do-i-trust-dotnets-dev-cert-in-linux
https://learn.microsoft.com/en-us/dotnet/csharp/
https://learn.microsoft.com/en-us/dotnet/csharp/linq/
https://learn.microsoft.com/en-us/dotnet/api/?view=net-7.0
https://learn.microsoft.com/en-us/nuget/consume-packages/install-use-packages-dotnet-cli
https://learn.microsoft.com/en-us/dotnet/
https://learn.microsoft.com/en-us/dotnet/fundamentals/
https://learn.microsoft.com/en-us/dotnet/core/sdkhttps://learn.microsoft.com/en-us/dotnet/core/tools/
https://learn.microsoft.com/en-us/dotnet/core/tools/global-tools
https://learn.microsoft.com/en-us/dotnet/core/diagnostics/
https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview?tabs=net-8
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/boxing-and-unboxing
http://slick.ninjacave.com/wiki/index.php?title=Main_Page
http://www.illposed.com/software/javaosc.html
http://www.illposed.com/software/javaoscdoc/
http://www.janus-project.org/Home
http://www.leebyron.com/else/mesh/
* Github
https://github.com/dotnet-architecture/eBooks
https://github.com/dotnet/docs
https://github.com/dotnet/csharpstandard
https://github.com/dotnet/csharplang
https://github.com/dotnet/dotnet
https://github.com/dotnet/templating
https://github.com/dotnet/msbuild
https://github.com/dotnet/templates
https://github.com/dotnet/docfx
https://github.com/dotnet/HttpRepl
https://github.com/dotnet/efcore
https://github.com/dotnet/org-policy
https://github.com/dotnet/new-repo
https://github.com/dotnet/fsharp-api-docs
https://github.com/dotnet/dotnet-api-docs
