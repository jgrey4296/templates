# -*- mode: snippet -*-
# name  : autoapi.options
# uuid  : autoapi.options
# key   : autoapi.options
# group : sphinx autoapi
# --
##-- autoapi options
# https://sphinx-autoapi.readthedocs.io/en/latest/reference/config.html
autoapi_keep_files        = False
autoapi_generate_api_docs = True
autoapi_add_toctree_entry = False
autoapi_type              = "python"
autoapi_template_dir      = "_docs/_templates/autoapi"
autoapi_root              = "_docs/autoapi"
autoapi_dirs              = ['.']
autoapi_file_patterns     = ["*.py", "*.pyi"]
autoapi_ignore            = [*exclude_patterns, "*_docs/conf.py"]
autoapi_member_order      = "groupwise"
autoapi_options           = [
    # 'imported-members',
    # "inherited-members",
    # 'show-inheritance-diagram',
    'members',
    'undoc-members',
    'private-members',
    'special_members',
    'show-inheritance',
    'show-module-summary',
]

def filter_contains(val:list|str, *needles:str) -> bool:
    match val:
        case str():
            return any(x in val for x in needles)
        case list():
            joined = " ".join(val)
            return any(x in joined for x in needles)
        case _:
            return False

def autoapi_prepare_jinja_env(jinja_env: jinja2.Environment) -> None:
    jinja_env.add_extension("jinja2.ext.debug")
    jinja_env.tests['contains'] = filter_contains
##-- end autoapi options
